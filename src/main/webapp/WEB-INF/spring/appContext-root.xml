<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd">
		
	<description>Root ApplicationContext</description>
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<!-- <import resource="classpath*:META-INF/spring/appContext-mod.xml" /> -->
		
	<!--  -->
	<util:properties id="appProperties" location="classpath:META-INF/appContext.properties" />
	<context:property-placeholder properties-ref="appProperties" />		
	
	<bean id="messageSource" 
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames" value="classpath:META-INF/messages/i18n/sec_messages"/>
		<property name="fallbackToSystemLocale" value="false"/>
	</bean>	
	
	<security:global-method-security pre-post-annotations="enabled"/>	
	<security:http pattern="/" security="none"/>
	<security:http pattern="/login" security="none"/>
	<security:http pattern="/resources/**" security="none"/>		
	
	<security:http use-expressions="true" auto-config="false" entry-point-ref="loginEntryPoint">
		<security:intercept-url pattern="/**" access="isAuthenticated()" />
		<security:custom-filter ref="loginFilter" position="FORM_LOGIN_FILTER" /> 
		<security:custom-filter ref="customLogoutFilter" position="LOGOUT_FILTER" />
		<!-- 停用CSRF，默认是开启的 -->
		<security:csrf disabled="true"/> 
	</security:http>
	
	<!-- 系统登录入口 -->
	<bean id="loginEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint"	c:loginFormUrl="/login" />
	<!-- 自定义系统登录filter -->
	<bean id="loginFilter" class="com.yourhealth.security.authentication.RyxxUsernamePasswordAuthenticationFilter">
		<!-- 拦截的系统登录虚拟url，在登录页面Post请求中设置 -->
		<property name="filterProcessesUrl" value="/syslogin" />
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="usernameParameter" value="username" />
		<property name="passwordParameter" value="password" />
		<property name="authenticationSuccessHandler">
			<bean class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
				<!-- 登录成功后主界面-->
				<property name="defaultTargetUrl" value="/main"/>
				<property name="alwaysUseDefaultTargetUrl" value="true" />
			</bean>
		</property>
		<property name="authenticationFailureHandler">
			<bean class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
				<property name="defaultFailureUrl" value="/login?error" />
			</bean>
		</property>
		<!-- <property name="sessionAuthenticationStrategy" ref="sas" /> -->
	</bean>
	<bean id="ryxxUserAuthenticationProvider" class="com.yourhealth.security.authentication.RyxxUserAuthenticationProvider" />
	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider ref="ryxxUserAuthenticationProvider" />
	</security:authentication-manager>
	<!-- 自定义系统登出filter -->
	<bean id="customLogoutFilter"
		class="org.springframework.security.web.authentication.logout.LogoutFilter">
		<!-- 拦截的系统退出的虚拟url -->
		<property name="filterProcessesUrl" value="/logout" />
		<!-- 退出处理成功后的默认显示url -->
		<constructor-arg index="0" value="/login?logout" />
		<constructor-arg index="1">
			<array>
				<!-- 自定义LogoutHandler，记录退出系统日志 -->
				<bean id="customLogoutHandler" class="com.yourhealth.security.authentication.CustomLogoutHandler" />
				<bean id="securityContextLogoutHandler"	class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />
			</array>
		</constructor-arg>
	</bean>	
	
	<!-- 启用security debug -->
	<security:debug/>
	
	<!-- 密码加密类 -->
	<bean id="passwordEncoder" xmlns="http://www.springframework.org/schema/beans"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">		
		<!-- <constructor-arg value="16"/> -->
	</bean>
	
	<!--  -->		
	<context:annotation-config />	  
	  
  	<!-- 数据源，使用wildfly中的jndi得到 -->
	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="java:jboss/xads/chpl" />
	</bean>

	<!-- jpa工厂bean -->
	<bean id="emf"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<!-- 这里设置的数据源会代替persistence.xml中jta-data-source的设置 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 定义domain扫描包，这样不需要在persistence.xml中定义每个class -->
		<property name="packagesToScan" value="com.yourhealth.*.domain,com.yourhealth.*.*.domain,com.yourhealth.*.*.*.domain"/>
		<property name="persistenceXmlLocation" value="classpath:META-INF/persistence.xml"/>
		<property name="persistenceUnitName" value="se"/>
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="true" />				
				<!-- <property name="database" value="MySQL" /> -->
			</bean>
		</property>
	</bean>

	<!-- @PersistenceContext -->
	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	<!-- JPA必须在事务环境下才能有效 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="emf" />
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager" />
	
  	<context:component-scan base-package="com.yourhealth.*.dao.impl, com.yourhealth.*.service.impl"/>  	
  	
  	<jpa:repositories base-package="com.yourhealth.*.dao" 
  		entity-manager-factory-ref="emf" 
 		transaction-manager-ref="transactionManager"
  	></jpa:repositories>
  	  	  	  		
</beans>
